#!/bin/sh
set -e

ROOT_DIR="$(dirname "$0")"

KOTLIN_VERSION="$(grep -m 1 '^kotlin \?=' "$ROOT_DIR/gradle/libs.versions.toml" | cut -d'"' -f2)"
JDK_VERSION="$(grep -s 'toolchainVersion' "$ROOT_DIR/gradle/gradle-daemon-jvm.properties" | cut -d'=' -f2)"

if [ "$JDK_VERSION" = "24" ]; then
  JDK_TARGET_VERSION="23"
else
  JDK_TARGET_VERSION="$JDK_VERSION"
fi

# OS specific support (must be 'true' or 'false').
case "$(uname -s)" in
    Linux*)     MACHINE=Linux;;
    Darwin*)    MACHINE=Mac;;
    *)          MACHINE="UNSUPPORTED"
esac

if [ "$MACHINE" = "Linux" ]; then
  export JAVA_HOME="/usr/lib/jvm/zulu-$JDK_VERSION-amd64/"
  if [ ! -d "$JAVA_HOME" ]; then
    export JAVA_HOME="/usr/lib/jvm/zulu$JDK_VERSION-ca-amd64/"
    if [ ! -d "$JAVA_HOME" ]; then
      echo "Installing JDK ${JDK_VERSION} (you may be prompted for your password)..."
      curl -s https://repos.azul.com/azul-repo.key | sudo gpg --batch --yes --dearmor -o /usr/share/keyrings/azul.gpg
      echo "deb [signed-by=/usr/share/keyrings/azul.gpg] https://repos.azul.com/zulu/deb stable main" | sudo tee /etc/apt/sources.list.d/zulu.list
      sudo apt update
      sudo apt install -y "zulu$JDK_VERSION-jdk"
    fi
  fi
elif [ "$MACHINE" = "Mac" ]; then
  export JAVA_HOME="/Library/Java/JavaVirtualMachines/zulu-$JDK_VERSION.jdk/Contents/Home"
  if [ ! -d "$JAVA_HOME" ]; then
    echo "Installing JDK ${JDK_VERSION} (you may be prompted for your password)..."
    brew tap mdogan/zulu
    brew install --cask "zulu-jdk${JDK_VERSION}"
  fi
else
  echo "Only macOS and Linux are supported."
  exit 1
fi

INSTALLATION_DIR="${HOME}/.kotlinw/${KOTLIN_VERSION}"
BINARY_DIR="${INSTALLATION_DIR}/kotlinc/bin"

if [ ! -f "${BINARY_DIR}/kotlin" ]; then
  echo "Downloading Kotlin ${KOTLIN_VERSION}"
  mkdir -p "${INSTALLATION_DIR}"
  temp_file=$(mktemp /tmp/kotlin.zip.XXXXXX)
  curl -sLo "${temp_file}" "https://github.com/JetBrains/kotlin/releases/download/v${KOTLIN_VERSION}/kotlin-compiler-${KOTLIN_VERSION}.zip"
  unzip -q "${temp_file}" -d "${INSTALLATION_DIR}"
  rm -f "${temp_file}"
fi

# this works around an issue where the Kotlin compiler used by ktlint accesses code that JDK 12+ don't allow access to
export JAVA_OPTS="--enable-native-access=ALL-UNNAMED --sun-misc-unsafe-memory-access=allow"

SCRIPT_FILE="$1"
# will remove the first element of the $@ arguments array since we read it already above
shift
# uses kotlinc instead of kotlin because the latter doesn't allow specifying a jvm target and defaults to Java 8
# the -- between SCRIPT_FILE and the other arguments is there so that the arguments are treated as arguments to the
# script and not to kotlinc
"${BINARY_DIR}/kotlinc" "-jvm-target" "$JDK_TARGET_VERSION" "-script" "$SCRIPT_FILE" "--" "${@}"
