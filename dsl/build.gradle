apply plugin: 'org.jetbrains.dokka'
apply plugin: 'org.jetbrains.kotlin.multiplatform'

gradle.ext.isCiServer = true // System.getenv().containsKey("CI")
logger.warn("Running on CI: ${gradle.ext.isCiServer}")

kotlin {
    /*
      js {
          nodejs()
      }
  */
    jvm()

    iosArm32()
    iosArm64()
    iosX64()
    linuxX64()
    macosX64()
    mingwX64()
    tvosArm64()
    tvosX64()
    watchosArm32()
    watchosArm64()
    watchosX86()

    sourceSets {
        commonMain {
            dependencies {
                api project(":flowredux")
                api libraries.flMadStateMachine
            }
        }

        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-multiplatform'
                implementation testLibraries.turbine
            }
        }

        jvmMain {
            dependsOn commonMain
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
            }
        }

        jvmTest {
            dependencies {
                implementation testLibraries.junit
                implementation testLibraries.kotlintest
                implementation testLibraries.coroutinesTest
                implementation testLibraries.flowRecorder
                implementation 'com.freeletics.flow.test:test:0.0.2-SNAPSHOT'
            }
        }

        nativeMain {
        }
        nativeTest {
        }

        configure([
                targets.iosArm32,
                targets.iosArm64,
                targets.iosX64,
                targets.linuxX64,
                targets.macosX64,
                targets.mingwX64,
                targets.tvosArm64,
                targets.tvosX64,
                targets.watchosArm32,
                targets.watchosArm64,
                targets.watchosX86,
        ]) {
            compilations.main.source(sourceSets.nativeMain)
            compilations.test.source(sourceSets.nativeTest)
        }
    }
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental"]
        jvmTarget = "1.8"
    }
}
/*
dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}
 */

if (gradle.ext.isCiServer) {
    apply plugin: "com.vanniktech.maven.publish"
}
